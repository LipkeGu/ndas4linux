#!/sbin/runscript
#
# Copyright ( C ) 2002-2006  XIMETA, Inc
# Modified 2007 andreaz@t-online (more gentoo like)
#
# Gentoo configuration
# description: NDAS device driver (Gentoo)
#

BASEDIR=/usr

depend() {
	need localmount net modules
	after bootmisc
	return 0
}

#
# Display the guide to report bug 
#
display_guide_to_report_bug() {
    echo " Report this problem with the following messages at http://code.ximeta.com/cgi-bin/trac.cgi/newticket"
    echo "=============================================================================="
    cat /proc/version
    ls -l /lib/modules/*/kernel/drivers/block/ndas/*
    gcc --version
    echo "=============================================================================="
    return 0
}

start() {
    einfo "Start NDAS"
    
    # For ppl who like to load the modules via autoload.d. This
    # is done via the variable LOAD_MODULES in /etc/conf.d/ndas
    #
    # yes or unset      = Modules loading by this script.
    # no       		= Modules already loaded from autoload.d
    if [ "${LOAD_MODULES}" = "" -o "${LOAD_MODULES}" = "yes" ] ; then

	ebegin "  Insert modules"
    	( grep -c ndas_ /lib/modules/`uname -r`/modules.dep || depmod )> /dev/null 2>&1
    	modprobe ndas_sal > /dev/null 2>&1
    	if [ $? -ne 0 ] ; then
            eerror " failed to load sal module!"
            display_guide_to_report_bug
            eend 1
	    return 1
    	fi

    	modprobe ndas_core > /dev/null 2>&1 
    	if [ $? -ne 0 ] ; then
            eerror " failed to load core module!"  
            rmmod ndas_sal > /dev/null 2>&i1
            display_guide_to_report_bug
            eend 1
	    return 1
    	fi

    	modprobe ndas_block > /dev/null 2>&1
    	if [ $? -ne 0 ] ; then
            eerror " failed to load block module!"  
            rmmod ndas_core > /dev/null 2>&1
            rmmod ndas_sal > /dev/null 2>&1
            display_guide_to_report_bug
            eend 1
	    return 1
    	fi
    	eend $?
    fi

    ebegin "  Create node"
    if [ ! -f /dev/ndas ] ; then
        /usr/share/ndas/mknod.sh > /dev/null 2>&1
        eend $?
    fi

    ebegin "  Start ndasadmin"
    /usr/sbin/ndasadmin start > /dev/null 2>&1
    if [ $? -ne 0 ] ; then
        eerror " failed to start ndas service!"
        rmmod ndas_block > /dev/null 2>&1
        rmmod ndas_core > /dev/null 2>&1
        rmmod ndas_sal > /dev/null 2>&1
        display_guide_to_report_bug
	eend 1
        return 1
    fi
    sleep 2
    eend $?
}

stop() {
    einfo "Stop NDAS"

    ebegin "  Sync"
    sync;sync
    eend $?

    ebegin "  Unmount"
    # unmount all filesystems on netdisk devices
    for s in `grep ^/dev/nd /etc/mtab| cut -d' ' -f1`
    do
        umount -f $s > /dev/null 2>&1
    done
    eend $?

    ebegin "  Sync"
    sync;sync
    eend $?

    ebegin "  Stop ndasadmin"
    /usr/sbin/ndasadmin stop > /dev/null 2>&1
    sleep 2
    eend $?
	
    if [ "${LOAD_MODULES}" = "" -o "${LOAD_MODULES}" = "yes" ] ; then
        ebegin "  Remove modules"
    	rmmod ndas_block > /dev/null 2>&1
    	rmmod ndas_core > /dev/null 2>&1
    	rmmod ndas_sal > /dev/null 2>&1
    	sleep 2
    	eend $?
    fi
}

status() {
# This is under construction and shall be a status-info for 
# modules loaded, ndasadmin running and devicenode existant.
    einfo "Check Status"
    einfo "  Modules:"
	
    ebegin "   ndas_block present?"
    eend 0

    ebegin "   ndas_core present?"
    eend 0
	
    ebegin "   ndas_sal present?"
    eend 0

    ebegin "  Node existant?"
    if [ !  -f /dev/ndas ] ; then
        eerror "   Node not found!" 
	eend 1
	return 1
    fi
    eend $?

    ebegin "  Ndasadmin started?"
    eend 0
}

