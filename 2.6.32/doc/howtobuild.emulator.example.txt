NDAS Emulator, Driver and Management tool for EM86xx Linux kernel

0. Overview
   This driver is built to support EM86xx Linux 2.4.
   This driver is composed of OS independent NDAS library("libndas.a" file. source code is not provided) and OS dependent source code.
   You can customize the source code according to the OS platform and requirement.
   And if you need changes in NDAS library or have feature request, please contact IOCELL Networks

1. Building the driver
 * Set following enviroment varialbes.
   * Set NDAS_DEVFS=y if you want to use DEVFS.
   * NDAS_MEMBLK_NO_PRIVATE define added for performace.
     Add it to NDAS_EXTRA_CFLAGS

export NDAS_CROSS_COMPILE=arm-elf-
export NDAS_CROSS_COMPILE_UM=arm-elf-
export NDAS_DEVFS=y
export NDAS_KERNEL_VERSION=2.4
export NDAS_KERNEL_ARCH=arm
export NDAS_KERNEL_PATH=/armutils/build_arm/linux-2.4.22-em86xx
export NDAS_EXTRA_CFLAGS="-D_ARM -DNDAS_SIGPENDING_OLD -DNDAS_MEMBLK_NO_PRIVATE"
export NDAS_EXTRA_LDFLAGS="-elf2flt=\"-s32768\""    
 * Execute make. This will create ndas_sal.o, ndas_core.o, ndas_block.o, ndas_emu.o and ndasadmin
 * Optionally you can build single module by running "make blk-single" for block device and "make emu-single" for emulator. It will create ndas_blk_s.o and ndas_emu_s.o
   
2. Installing & Running NDAS emulator
 * Copy ndas_sal.o, ndas_core.o, ndas_emu.o (or ndas_emu_s.o if you built it as a single module) to target system.
 * insmod ndas_sal.o; insmod ndas_core.o; insmod ndas_emu.o 
   or
   insmod ndas_emu_s.o 
 * You can change emulator target device using dev option. For example
   insmod ndas_emu_s.o dev=/dev/hda
  
3. Installing & Running NDAS block device
 * Copy mknod.sh, ndas_sal.o, ndas_core.o, ndas_block.o (or ndas_blk_s.o instead of three modules) and ndasadmin to target system.
 * Execute mknod.sh. This will create device files. This is required only when you built the driver without NDAS_DEVFS defined and you want to mount NDAS devices.
 * insmod ndas_sal.o; insmod ndas_core.o; insmod ndas_block.o 
   or 
   insmod ndas_blk_s.o
 * Use ndasadmin to register/enable/mount NDAS devices. The following is sample shell commands that mounts NDAS device.
---------------------------------
insmod ndas_sal.o
insmod ndas_core.o
insmod ndas_emu.o
insmod ndas_block.o
./ndasadmin start
./ndasadmin register 00115232 -n Disk1
./ndasadmin enable -s 1 -o r
mount /dev/nd/disc0/part1 /mnt/disk1
./ndasadmin disable -s 1
./ndasadmin unregister -n Disk1
--------------------------------
 * First NDAS device will be registered as /dev/hda if NDAS_DEVFS is not defined, and /dev/nd/disc0 if NDAS_DEVFS is defined.
 * Firt partition of first registered NDAS device is /dev/hda1 or /dev/nd/disc0/part1
 * Note that if you have only one registered device at a time, its slot number always is 1. In other cases, consult /proc/ndas/devices/<Device Name>/slots for exact slot number. 
  * See http://ndas4linux.iocellnetworks.com/cgi-bin/trac.cgi/wiki/Usage for detailed usages. 
 
4. About serial number
 * This libndas.a uses serial number to register NDAS devices. So you must use serial numbers instead of ID. 
 * Serial numbers of NDAS devices can be retreived by using "ndasadmin probe" or "cat /proc/ndas/probed". 
 * The length of serial number is 8 for Ximeta's NDAS devices and 16 for some other OEM's NDAS devices including emulator.
 * Serial number is usually printed on the case of NDAS devices. OEM's NDAS device prints only first 8 characters of serial number. So we recommand that UI shows only first 8 characters of serial number. 
 * UI may show the volume name of NDAS device for each identification of NDAS devices.


5. Customization
 * ndasadmin itself can be used as tool for NDAS devices, and it is a good sample usage of NDAS APIs. 
 * We provided pre-built ndas_emu.o binary which uses "/dev/discs/disc0/disc" as target device. But you can change it by modifying ndas_emu_main.c and rebuild.
 * Source code of SAL is provided. You can use a file as target device instead of block device file by re-implementing of io.c.
 * libndas.a is not dependent on Linux kernel, so you may adopt minor kernel changes by fixing provided source code.
 * Visit http://ndas4linux.iocellnetworks.com for overall information about NDAS driver.(Emulator is not covered yet).
